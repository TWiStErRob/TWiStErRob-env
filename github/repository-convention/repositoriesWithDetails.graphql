query {
    user(login: "TWiStErRob") {
        repositories(first: 100, isFork: false, affiliations: OWNER) {
            __typename
            nodes {
                __typename

                ...aboutFields
                ...generalFields
                ...accessFields
                ...codeAndAutomationFields
                ...securityFields
                ...integrationsFields

                #hasPagesEnabled # has_pages
                #forkingAllowed # allow_forking
                #isFork # fork
                isUserConfigurationRepository # GQL

                # Pieces
                isBlankIssuesEnabled # GQL
                isSecurityPolicyEnabled # GQL
                # Branching
                # Issues
                #labels { nodes { name, description, color } }
            }
        }
    }
}

# About > Edit repository details
fragment aboutFields on Repository {
    # Description
    description
    # Website
    homepageUrl # url
    # Topics
    repositoryTopics(first: 100) { nodes { topic { name } } }
    # Include in the home page (Releases, Packages, Environments)
    # MISSING
}

# General > ...
fragment generalFields on Repository {
    ...generalGeneralFields
    ...generalFeaturesFields
    ...generalPullRequestsFields
    ...generalArchivesFields
    ...generalPushesFields
    ...generalDangerZoneFields
}
# General > General
fragment generalGeneralFields on Repository {
    #- Repository name
    name # name
    #- Template repository
    isTemplate
    #- Require contributors to sign off on web-based commits
    webCommitSignoffRequired
    #- Social Preview
    usesCustomOpenGraphImage
    openGraphImageUrl
}
# General > Features
fragment generalFeaturesFields on Repository {
    #- Wikis
    hasWikiEnabled #has_wiki
    #- Issues
    hasIssuesEnabled # has_issues
    #- Sponsorships
    # MISSING
    #- Preserve this repository
    # MISSING
    #- Discussions
    hasDiscussionsEnabled # GQL-only
    #- Projects
    hasProjectsEnabled # has_projects
}
# General > Pull Requests
fragment generalPullRequestsFields on Repository {
    #- Allow merge commits
    mergeCommitAllowed # allow_merge_commit
    mergeCommitMessage
    mergeCommitTitle
    #- Allow squash merging
    squashMergeAllowed # allow_squash_merge
    squashMergeCommitTitle
    squashMergeCommitMessage
    #- Allow rebase merging
    rebaseMergeAllowed # allow_rebase_merge
    #- Always suggest updating pull request branches
    allowUpdateBranch # allow_update_branch
    #- Allow auto-merge
    autoMergeAllowed # allow_auto_merge
    #- Automatically delete head branches
    deleteBranchOnMerge # delete_branch_on_merge
}
# General > Archives
fragment generalArchivesFields on Repository {
    __typename # placeholder
    #- Include Git LFS objects in archives
    # MISSING
}
# General > Pushes
fragment generalPushesFields on Repository {
    __typename # placeholder
    #- Limit how many branches and tags can be updated in a single push
    # MISSING
}
# General > Danger Zone
fragment generalDangerZoneFields on Repository {
    #- Change repository visibility
    visibility
    isPrivate # private
    #- Transfer ownership
    owner {
        login
    }
    #- Archive this repository
    isArchived # archived
    #- Delete this repository
    # N/A
}

# Access > ...
fragment accessFields on Repository {
    ...accessCollaboratorsFields
    ...accessModerationInteractionLimitFields
    ...accessModerationCodeReviewLimitFields
}
# Access > Collaborators > ...
fragment accessCollaboratorsFields on Repository {
    visibility
    collaborators(affiliation: DIRECT) {
        edges {
            node {
                login
            }
            permission
        }
    }
}
# Access > Moderation options > Interaction limits > Temporary interaction limits
fragment accessModerationInteractionLimitFields on Repository {
    interactionAbility {
        expiresAt
        limit
        origin
    }
}
# Access > Moderation options > Code review limits > Code review limits
fragment accessModerationCodeReviewLimitFields on Repository {
    __typename # placeholder
    #- Limit to users explicitly granted read or higher access
    # MISSING
}

# Code and automation > ...
fragment codeAndAutomationFields on Repository {
    ...codeAndAutomationBranchesFields
    ...codeAndAutomationTagsFields
    ...codeAndAutomationActionsFields
    ...codeAndAutomationWebhooksFields
    ...codeAndAutomationEnvironmentsFields
    ...codeAndAutomationCodespacesFields
    ...codeAndAutomationPagesFields
}
# Code and automation > Branches
fragment codeAndAutomationBranchesFields on Repository {
    #- Default branch
    defaultBranchRef { name } # default_branch
    #- Branch protection rules
    branchProtectionRules(first: 10) {
        totalCount
        nodes {
            ...codeAndAutomationBranchProtectionRules
        }
    }
}
# Branch protection rule
fragment codeAndAutomationBranchProtectionRules on BranchProtectionRule {
    #- Branch name pattern
    pattern
    #- Applies to ... branches
    matchingRefs {
        totalCount
        nodes {
            name
        }
    }
    ...codeAndAutomationBranchProtectionRulesProtection
    ...codeAndAutomationBranchProtectionRulesAdmin
}
# Protect matching branches
fragment codeAndAutomationBranchProtectionRulesProtection on BranchProtectionRule {
    # Require a pull request before merging
    # Require approvals
    requiresApprovingReviews
    requiredApprovingReviewCount
    # Dismiss stale pull request approvals when new commits are pushed
    dismissesStaleReviews
    # Require review from Code Owners
    requiresCodeOwnerReviews
    # Require approval from someone other than the last pusher
    requireLastPushApproval

    # Require status checks to pass before merging
    requiresStatusChecks
    # Require branches to be up to date before merging
    requiresStrictStatusChecks
    # Status checks that are required.
    requiredStatusChecks {
        context
        app {
            id
            name
        }
    }
    # Require conversation resolution before merging
    requiresConversationResolution
    # Require signed commits
    requiresCommitSignatures
    # Require linear history
    requiresLinearHistory
    # Require deployments to succeed before merging
    # MISSING flag
    # MISSING list of deployments
    # Lock branch
    lockBranch
    # Do not allow bypassing the above settings
    isAdminEnforced # guess
}
# Rules applied to everyone including administrators
fragment codeAndAutomationBranchProtectionRulesAdmin on BranchProtectionRule {
    #- Allow force pushes
    allowsForcePushes
    #- Specify who can force push
    bypassForcePushAllowances {
        totalCount
        nodes {
            # People, teams, or apps who can force push
            actor {
                __typename
                ... on App { id, slug }
                ... on Team { id, slug }
                ... on User { id, slug: login }
            }
        }
    }
    # Allow deletions
    allowsDeletions
}
# Code and automation > Tags > Protected tags
fragment codeAndAutomationTagsFields on Repository {
    __typename # placeholder
    #- Protected tag rules
    # ...MISSING
}
# Code and automation > Actions
fragment codeAndAutomationActionsFields on Repository {
    __typename # placeholder
    #- General > Actions permissions
    # MISSING
    #- General > Artifact and log retention
    # MISSING
    #- General > Fork pull request workflows from outside collaborators
    # MISSING
    #- General > Workflow permissions
    # MISSING
    #- Runners
    # ...MISSING
}
# Code and automation > Webhooks
fragment codeAndAutomationWebhooksFields on Repository {
    __typename # placeholder
    #- Payload URL
    # MISSING
    #- Content type
    # MISSING
    #- Secret
    # MISSING
    #- Which events would you like to trigger this webhook?
    # MISSING
    #- Active
    # MISSING
}
# Code and automation > Environments
fragment codeAndAutomationEnvironmentsFields on Repository {
    environment(name: "github-pages") {
        id
        name
        #- Environment protection rules
        protectionRules {
            nodes {
                type
                # Wait timer
                timeout
                # Required reviewers
                reviewers {
                    nodes {
                        ... on User {
                            id
                            slug: login
                        }
                        ... on Team {
                            id
                            slug
                        }
                    }
                }
            }
        }
        #- Deployment branches
        # ...MISSING
        #- Environment secrets
        # ...MISSING
    }
}
# Code and automation > Codespaces
fragment codeAndAutomationCodespacesFields on Repository {
    __typename # placeholder
    #- Prebuild configuration
    # MISSING
}
# Code and automation > Pages
fragment codeAndAutomationPagesFields on Repository {
    __typename # placeholder
    #- Build and deployment > Source
    # MISSING
    #- Build and deployment > Branch, Folder
    # MISSING
    #- Custom domain
    # MISSING
    #- Enforce HTTPS
    # MISSING
}

# Security > ...
fragment securityFields on Repository {
    ...securityAnalysisFields
    ...securityDeployKeys
    ...securitySecrets
}
# Security > Code security and analysis
fragment securityAnalysisFields on Repository {
    __typename # placeholder
    #- Private vulnerability reporting
    # MISSING
    #- Dependency graph
    # MISSING
    #- Dependabot
    # ...MISSING
    #- Code scanning
    # MISSING
    #- Secret scanning
    # MISSING
}
# Security > Deploy keys
fragment securityDeployKeys on Repository {
    #- Deploy keys
    deployKeys(first: 100) {
        totalCount
        nodes {
            #- Title
            title
            #- Key
            key
            #- Allow write access
            readOnly
            # ?
            verified
        }
    }
}
# Security > Secrets
fragment securitySecrets on Repository {
    __typename # placeholder
    # Actions > Actions secrets
    #- Environment secrets
    # ...MISSING
    #- Repository secrets
    # ...MISSING
    #- Codespaces secrets
    # ...MISSING
    #- Dependabot secrets
    # ...MISSING
}

# Integrations > ...
fragment integrationsFields on Repository {
    __typename # placeholder
    # GitHub apps > Installed GitHub Apps
    # ...MISSING
    # Email notifications > Email notifications
    # ...MISSING
}
